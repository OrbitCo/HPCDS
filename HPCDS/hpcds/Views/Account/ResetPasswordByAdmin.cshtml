@model hpcds.Models.ResetPasswordByAdminViewModel
@{
    ViewBag.Title = "Reset Password";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("ResetPasswordByAdmin", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.Email)
    @Html.HiddenFor(m => m.Code)
    @(Html.Kendo().PanelBar()
                        .Name("pb-registration")
                        .ExpandMode(PanelBarExpandMode.Multiple)
                        .SelectedIndex(0)
                        .Items(items =>
                        {
                            items.Add().Text("1. Reset Password")
                                .Content(@<text><br />
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.Password, new { @class = "col-sm-2 col-md-3 control-label" })
                                        <a class="k-icon k-i-information text-info" tabindex="0" style="text-decoration: none" data-toggle="popover" data-trigger="focus" title="Hint" data-content="@HPCDS.Resources.Model.ApplicationUserRes.PasswordTooltip"></a>
                                        <div class="col-md-12">
                                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.Password)
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-sm-2 col-md-3 control-label" })
                                        <div class="col-md-12">
                                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                        </div>
                                    </div>
                                    <br />
                                </text>);

                                        items.Add().Text("2. Security Questions")
                                            .Expanded(true)
                                            .Content(@<text><br />
                                                <p class="col-10 form-group">Please provide answers for three question.</p>
                                                @for (int i = 0; Model.Questions != null && i < Model.Questions.Count(); i++)
                                                                {
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Questions[i].Q_ID
                                                                , string.Format("{0} {1}:",Html.DisplayNameFor(m => m.Questions[i].Q_ID),i+1)
                                                                , new { @class = "col-sm-6 col-md-4 control-label hidden sr-only" })
                                                        <div class="col-md-12">
                                                            @Html.EditorFor(m => m.Questions[i].Q_ID, null, new { page = i })
                                                        </div>
                                                    </div>
                                                    <div class="form-group">
                                                        @Html.LabelFor(m => m.Questions[i].Answer, new { @class = "col-sm-2 col-md-3 control-label hidden sr-only" })
                                                        <div class="col-md-12">
                                                            @Html.EditorFor(m => m.Questions[i].Answer)
                                                            <br /><br />
                                                        </div>
                                                    </div>
                                                                }
                                                <div class="form-group">
                                                    <input type="submit" class="btn btn-primary btn-lg col-12" value="Reset" />
                                                </div>
                                                <br />
                                            </text>);
                                                })
    )

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/app/account")
    <script type="text/javascript">
        var localFuncs = RegisterJS();

        $(function () {

            // Tigger Change Event, so -panel collapse or show based on selected value
            localFuncs.ShowHidePanels();

            //Kendo validation on submit
            localFuncs.ClientSideFormValidation();
        });
    </script>
}
